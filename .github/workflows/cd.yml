name: Create Release

on:
    push:
        tags:
            - "*"

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout code
            - name: Checkout code
              uses: actions/checkout@v2

            # Step 2: Verify commit is on main branch
            - name: Verify commit is on main
              run: |
                  git fetch origin main
                  if ! git merge-base --is-ancestor $(git rev-parse HEAD) origin/main; then
                    echo "Commit is not on main branch, exiting."
                    exit 1
                  fi

            # Step 3: Create a GitHub release with the release notes
            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  prerelease: false

            # Step 4: Deploy on VPS with Ansible
            - name: DÃ©ployer sur le VPS avec Ansible
              uses: dawidd6/action-ansible-playbook@v2
              with:
                  playbook: ansible/playbook.yml
                  directory: ./ansible
                  inventory: ansible/inventory.ini
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  options: |
                      -e "node_env=${{ secrets.NODE_ENV }}"
                      -e "port_backend=${{ secrets.PORT_BACKEND }}"
                      -e "port_frontend=${{ secrets.PORT_FRONTEND }}"
                      -e "db_user=${{ secrets.DB_USER }}"
                      -e "db_host=${{ secrets.DB_HOST }}"
                      -e "db_name=${{ secrets.DB_NAME }}"
                      -e "db_password=${{ secrets.DB_PASSWORD }}"
                      -e "db_port=${{ secrets.DB_PORT }}"
                      -e "jwt_secret=${{ secrets.JWT_SECRET }}"
                      -e "email=${{ secrets.EMAIL }}"
                      -e "mailjet_api_key=${{ secrets.MAILJET_API_KEY }}"
                      -e "mailjet_secret_key=${{ secrets.MAILJET_SECRET_KEY }}"
                      -e "origin_url=${{ secrets.ORIGIN_URL }}"
                      -e "server_url=${{ secrets.SERVER_URL }}"
