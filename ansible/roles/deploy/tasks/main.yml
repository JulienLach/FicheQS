#SPDX-License-Identifier: MIT-0
---
# tasks file for deploy - Simple et efficace
- name: Créer le répertoire de l'application
  ansible.builtin.file:
      path: "/opt/ficheqs"
      state: directory
      mode: "0755"

- name: Copier les fichiers de l'application
  copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
  loop:
      - { src: "../../../../docker-compose.yml", dest: "/opt/ficheqs/docker-compose.yml" }
      - { src: "../../../../database_script.sql", dest: "/opt/ficheqs/database_script.sql" }
      - { src: "../../../../init-databases.sql", dest: "/opt/ficheqs/init-databases.sql" }

- name: Copier les répertoires backend et frontend
  copy:
      src: "{{ item }}"
      dest: "/opt/ficheqs/"
  loop:
      - "../../../../backend"
      - "../../../../frontend"

- name: Arrêter tous les conteneurs existants
  command: docker compose down
  args:
      chdir: "/opt/ficheqs"
  ignore_errors: yes

- name: Démarrer tous les services
  command: docker compose up -d --build
  args:
      chdir: "/opt/ficheqs"
  environment:
      NODE_ENV: "{{ node_env }}"
      DB_USER: "{{ db_user }}"
      DB_PASSWORD: "{{ db_password }}"
      EMAIL: "{{ email }}"
      MAILJET_API_KEY: "{{ mailjet_api_key }}"
      MAILJET_SECRET_KEY: "{{ mailjet_secret_key }}"
      JWT_SECRET: "{{ jwt_secret }}"
      JWT_SECRET_H76: "{{ jwt_secret_h76 }}"
      JWT_SECRET_DEMO: "{{ jwt_secret_demo }}"
      ORIGIN_URL_H76: "{{ origin_url_h76 }}"
      SERVER_URL_H76: "{{ server_url_h76 }}"
      ORIGIN_URL_DEMO: "{{ origin_url_demo }}"
      SERVER_URL_DEMO: "{{ server_url_demo }}"

- name: Attendre que les services soient prêts
  wait_for:
      port: "{{ item }}"
      host: localhost
      delay: 10
      timeout: 120
  loop:
      - 5432 # PostgreSQL
      - 3001 # Backend H76
      - 3002 # Backend Demo
      - 8080 # Frontend H76
      - 8081 # Frontend Demo
